{"version":3,"sources":["assets/video.mp4","components/Video.jsx","components/WebCamStream.jsx","components/VideoContainer.jsx","components/Instalation.jsx","style/color.js","components/text/Title.jsx","components/text/SubTitle.jsx","components/text/Credits.jsx","hooks/useMobilePress.js","components/buttons/StyledButton.jsx","utils/isVertical.js","components/pages/InitialPage.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Video","styled","video","StyledWebCam","Webcam","props","left","width","top","height","videoConstraints","facingMode","WebCamStream","webCamRef","React","useRef","ref","audio","VideoContainer","div","videoRef","createRef","Instalation","useState","offsetTop","setOffsetTop","offsetLeft","setOffsetLeft","offsetWidth","setOffsetWidth","offsetHeight","setOffsetHeight","useEffect","handleResize","current","console","log","window","addEventListener","removeEventListener","src","autoPlay","fontColor","Title","h1","noMarginTop","mobileHorizontal","Credits","useMobilePress","active","isActive","moved","isMoved","onClick","e","undefined","onTouchStart","preventDefault","setTimeout","onTouchEnd","persist","onTouchMove","onTouchCancel","onMouseDown","onMouseUp","onMouseLeave","baseY","paddingMinusBorder","base","borderWidth","StyledButtonWithoutMobileSupport","button","hover","absolute","right","floating","StyledButton","press","vw","Math","max","document","documentElement","clientWidth","innerWidth","isVertical","clientHeight","innerHeight","isMobile","isTablet","Description","Grid","item","xs","PlayButton","play","started","fontSize","style","color","InitialPage","container","justify","align","spacing","start","App","hasStarted","setStarted","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.01041797.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/video.2c88a230.mp4\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst Video = styled.video`\n    width: 80%;\n`;\n\nexport default Video;\n","import React from 'react';\nimport Webcam from 'react-webcam';\nimport styled from 'styled-components';\n\nconst getHorizontalOffset = (left, width) => {\n    return left - width / 100 * 1.8;\n};\n\nconst getVerticalOffset = (top, height) => {\n    return top + height / 100 * 68.5;\n};\n\nconst getHeight = (height) => {\n    return height / 100 * 40.8;\n};\n\nconst getWidth = (width) => {\n    return width / 100 * 40.8;\n};\n\nconst StyledWebCam = styled(Webcam)`\n    left: ${props => getHorizontalOffset(props.left, props.width) + \"px\"};\n    top: ${props => getVerticalOffset(props.top, props.height) + \"px\"};\n    height: ${props => getHeight(props.height) + \"px\"};\n    width: ${props => getWidth(props.width) + \"px\"};\n    position: absolute;\n`;\n\nconst videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"user\"\n};\n\nconst WebCamStream = (props) => {\n    \n    const webCamRef = React.useRef();\n\n    return (\n        <StyledWebCam\n            ref={webCamRef}\n            audio={false}\n            videoConstraints={videoConstraints}\n            {...props}\n        />\n    );\n};\n\nexport default WebCamStream;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst VideoContainer = styled.div`\n    height: 100vh;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default VideoContainer;\n","import React from 'react';\n\nimport Video from './Video';\nimport video from '../assets/video.mp4';\nimport WebCamStream from './WebCamStream';\nimport VideoContainer from './VideoContainer';\n\nconst videoRef = React.createRef();\n\nconst Instalation = () => {\n    \n    const [offsetTop, setOffsetTop] = React.useState(0);\n    const [offsetLeft, setOffsetLeft] = React.useState(0);\n    const [offsetWidth, setOffsetWidth] = React.useState(1280);\n    const [offsetHeight, setOffsetHeight] = React.useState(720);\n\n    React.useEffect(() => {\n        const handleResize = () => {\n            if(videoRef.current) {\n                setOffsetTop(videoRef.current.offsetTop);\n                setOffsetLeft(videoRef.current.offsetLeft);\n                setOffsetWidth(videoRef.current.offsetWidth);\n                setOffsetHeight(videoRef.current.offsetHeight);\n                console.log(videoRef.current.offsetTop);       \n            }\n        }\n        handleResize();\n        window.addEventListener('resize', handleResize)\n            \n        return () => {\n            window.removeEventListener('resize', handleResize)\n        }\n    },[]);\n\n    return (\n        <div>\n            <WebCamStream\n                top={offsetTop}\n                left={offsetLeft}\n                width={offsetWidth}\n                height={offsetHeight}\n            />\n            <VideoContainer>\n                <Video ref={videoRef} src={video} autoPlay={true}/>\n            </VideoContainer>\n        </div>\n    );\n}\n\nexport default Instalation;\n","export const fontColor = 'hsla(20, 100%, 60%, 1)';\n\nexport const backgroundColor = `hsla(20, 80%, 10%, 1);`;\n\nexport const backgroundActive = `hsla(20, 80%, 20%, 1);`;\n","import styled from 'styled-components';\nimport {fontColor} from '../../style/color';\n\nconst Title = styled.h1`\n    ${props => props.noMarginTop ? \"\" : \"margin-top: 15vh;\"}\n    font-size: ${props => props.mobileHorizontal === true ? \"3.5em\" : \"5em\"};\n    color: ${fontColor};\n`;\n\nexport default Title;\n","import styled from 'styled-components';\nimport {fontColor} from '../../style/color';\n\nconst SubTitle = styled.h1`\n    margin-top: 5vh;\n    font-size: ${props => props.mobileHorizontal === true ? \"2.5rem\" : \"3em\"};\n    color: ${fontColor};\n`;\n\nexport default SubTitle;\n\n","import styled from 'styled-components';\nimport {fontColor} from '../../style/color';\n\nconst Credits = styled.h1`\n    margin-top: 5vh;\n    font-size: ${props => props.mobileHorizontal === true ?  \"1rem\" : \"1.5em\"};\n    color: ${fontColor};\n`;\n\nexport default Credits;\n","import React from 'react';\n\nfunction useMobilePress(props) {\n\n    const [active, isActive] = React.useState(false);\n    const [moved, isMoved] = React.useState(false);\n    \n    return {\n        onClick: (e) => {\n            if(props.onClick !== undefined) props.onClick(e);\n        },\n        active: active && !moved,\n        onTouchStart: (e) => {\n            e.preventDefault();\n            setTimeout(() => {\n                if(!moved)isActive(true)\n            }, 100);\n            if(props.onTouchStart !== undefined) props.onTouchStart();\n        },\n        onTouchEnd: (e) => {\n            e.preventDefault();\n            e.persist();\n            if(!moved)props.onClick(e);\n            isMoved(false);\n            isActive(false);\n            setTimeout(() => isActive(false), 100);\n            if(props.onTouchEnd !== undefined) props.onTouchEnd(e);   \n        },\n        onTouchMove: (e) => {\n            e.preventDefault();\n            isMoved(true);\n            isActive(false);\n            setTimeout(() => isActive(false), 100);\n            if(props.onTouchMove !== undefined) props.onTouchMove(e);\n        },\n        onTouchCancel: (e) => {\n            e.preventDefault();\n            isActive(false);\n            isMoved(false);\n            setTimeout(() => isActive(false), 100);\n            if(props.onTouchCancel !== undefined) props.onTouchCancel(e);\n        },\n        onMouseDown: (e) => {\n            if(props.onMouseDown !== undefined) props.onMouseDown(e);\n            isActive(true);\n        },\n        onMouseUp: (e) => {\n            if(props.onMouseUp !== undefined) props.onMouseUp(e);\n            isActive(false);\n        },\n        onMouseLeave: (e) => {\n            if(props.onMouseUp !== undefined) props.onMouseUp(e);\n            isActive(false);\n        }\n    };\n  };\n\n  export default useMobilePress;\n","import { fontColor, backgroundColor, backgroundActive } from '../../style/color.js';\nimport styled from 'styled-components';\nimport useMobilePress from '../../hooks/useMobilePress';\nimport React from \"react\";\n\nconst paddingMinusBorder = (base, borderWidth) => base - borderWidth;\n    \nconst padding = (baseX, baseY) => {\n    return `${paddingMinusBorder(baseX, 0.1)}rem ${paddingMinusBorder(baseY, 0.1)}rem`;\n};\n\nexport const hoverTransform = `transform:scale(1.05, 1.05)`;\n\nconst hover = (props) => !props.active ? `\n    @media (hover: hover) and (pointer: fine) {\n      &:hover {\n        ${hoverTransform}\n      }\n    }\n  ` : \"\";\n\nconst StyledButtonWithoutMobileSupport = styled.button`\n    border-radius: 50%;\n    padding: ${padding(0.4, 0.5)};\n    border: 0.1vmax solid ${fontColor};\n    box-sizing: border-box;\n    &:focus {\n        outline:none !important;\n    };\n    -webkit-user-select: none; /* Safari */        \n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* IE10+/Edge */\n    user-select: none; /* Standard */\n    position: relative;\n    color: ${fontColor};\n    ${props => hover(props)}\n    ${props => props.active ? \"transform:scale(0.95, 0.95);\" : \"\"}\n    background: ${props => props.active ? backgroundActive : backgroundColor};\n    transition: ${props => `background ${props.active ? 0 : 0.25}s linear;`};\n    ${props => props.absolute ? `position: absolute;` : \"\"};\n    ${props => props.top ? `top: ${props.top}%;` : \"\"}\n    ${props => props.right ? `right: ${props.right}%;` : \"\"}\n    ${props => props.floating ? `z-index: 5000;` : \"\"};\n`;\n\nconst StyledButton = (props) => {\n\n  const press = useMobilePress(props);\n  \n  return <StyledButtonWithoutMobileSupport {...props} {...press}/>;\n};\n\nexport default StyledButton;\n","const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n\nconst vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)\n\nconst isVertical = vh > vw;\n\nexport default isVertical;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Grid from '@material-ui/core/Grid';\nimport {fontColor} from '../../style/color';\nimport Title from '../text/Title';\nimport SubTitle from '../text/SubTitle';\nimport Credits from '../text/Credits';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StyledButton from '../buttons/StyledButton';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport isVertical from '../../utils/isVertical';\nimport { isMobile, isTablet } from 'react-device-detect';\n\nconst mobileHorizontal = !isVertical && isMobile && !isTablet;\n\nconst Description = () => {\n    return (\n        <Grid item xs={12}>\n            <Title mobileHorizontal={mobileHorizontal}>500 Metros</Title>\n            <Credits mobileHorizontal={mobileHorizontal}>Ivana Kairiyama</Credits>\n        </Grid>\n    );\n};\n\nconst PlayButton = (props) => {\n    return (\n        <StyledButton onClick={props.play}>\n            {props.started ?\n                <KeyboardArrowDownIcon\n                    fontSize=\"large\"\n                    style={{color: fontColor}}\n                />\n                    :\n                <PlayArrowIcon\n                    fontSize=\"large\"\n                    style={{color: fontColor}}\n                />\n            }\n        </StyledButton>\n    );\n};\n\nconst InitialPage = (props) => {\n    return (\n        <Grid container justify={\"center\"} align={\"center\"} spacing={mobileHorizontal ? 3 : 10}>\n            <Description/>\n            <Grid item xs={10}>\n                <PlayButton play={props.start} started={props.started}/>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default InitialPage;\n","import React from 'react';\nimport './App.css';\nimport Instalation from './Instalation';\nimport InitialPage from './pages/InitialPage';\n\nconst App = props => {\n\n  const [hasStarted, setStarted] = React.useState(false);\n\n  return (\n    <div className=\"App\">\n        {hasStarted ? <Instalation/> : <InitialPage start={() => setStarted(true)}/>}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}